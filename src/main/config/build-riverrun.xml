<?xml version="1.0"?>
<!--
  - DSpace build file
  -
  - Local build tasks for RiverRun
  -
  - ant -f build-riverrun.xml [target]
  -->

<project name="RiverRun" default="help">

    <!-- ============================================================= -->
    <!-- Description                                                   -->
    <!-- ============================================================= -->

    <description>
======== DSpace platform build file: Local tasks for 'RiverRun' ========

Common usage:

  Load registry with additional DC elements and metadata schemas
    % ant load_registries

========================================================================
  </description>

    <!-- ============================================================= -->
    <!-- Will be using various environment variables                   -->
    <!-- ============================================================= -->

    <property environment="env" />


    <!-- ============================================================= -->
    <!-- Build parameters that are likely to need tweaking             -->
    <!-- ============================================================= -->

    <!-- Default configuration to use.  This may be overridden. -->
    <property name="config" value="config/dspace.cfg" />

    <!-- Give user a chance to override without editing this file 
       (and without typing -D each time s/he compiles it) -->
    <property file="${user.home}/.dspace.properties" />

    <!-- First, set the dspace.dir property so it can be
       interpolated when loading the config file.
       This crudely mimics the way ConfigurationManager interpolates properties.
       Note that it ONLY works for directories that interpolate ${dspace.dir}
       but that _should_ cover all cases used in this build configuration.
    -->
    <loadproperties srcFile="${config}">
        <filterchain>
            <linecontainsregexp>
                <regexp pattern="^\s*dspace\.dir\s+" />
            </linecontainsregexp>
        </filterchain>
    </loadproperties>

    <!-- Load the configuration -->
    <property file="${config}" />

    <!-- Timestamp date used when creating backup directories -->
    <tstamp>
        <format property="build.date" pattern="yyyyMMdd-HHmmss" />
    </tstamp>


    <!-- ============================================================= -->
    <!-- The DSpace class path for executing installation targets      -->
    <!-- ============================================================= -->

    <!-- We will include the environment CLASSPATH -->
    <path id="class.path">
        <pathelement path="${env.CLASSPATH}" />
        <fileset dir="lib">
            <include name="**/*.jar" />
        </fileset>
    </path>


    <!-- ============================================================= -->
    <!-- Print some useful help text                                  -->
    <!-- ============================================================= -->
    <target name="help">

        <echo message="" />
        <echo message="DSpace configuration file: RiverRun tasks" />
        <echo message="-----------------------------------------" />
        <echo message="" />
        <echo message="Available targets are:" />
        <echo message="" />
        <echo message="load_registries  --> Load custom metadata registries into the database" />
        <echo message="" />
        <echo message="init_data        --> Write sample data files to ${dspace.dir}/data"/>
        <echo message="update_data      --> Update sample data"/>
        <echo message="" />
        <echo message="load_structure   --> Load sample set of communities, sub-communties, and"/>
        <echo message="                     collections into the database as user ${mail.admin}" />
        <echo message="" />
        <echo message="Available parameters:" />
        <echo message="" />
        <echo message="-Duser=user@domain.org --> user that owns the imported data; default" />
        <echo message="                           is ${mail.admin} (mail.admin in dspace.cfg)"/>
    </target>


    <!-- ==================================================================== -->
    <!-- Load custom metadata schemas & elements registries into the database -->
    <!-- ==================================================================== -->

    <!-- Loads additions to Dublin Core type registries, and additional schemas, elements -->
    <target name="load_registries" description="Load initial contents of registries">
        <java classname="org.dspace.administer.MetadataImporter" classpathref="class.path" fork="yes" failonerror="yes">
            <sysproperty key="log4j.configuration" value="file:config/log4j-console.properties" />
            <sysproperty key="dspace.log.init.disable" value="true" />
            <sysproperty key="dspace.configuration" value="${config}" />
            <arg line="-f '${dspace.dir}/config/registries/riverrun-metadata.xml'" />
        </java>
    </target>
    
    
    <!-- ============================================================= -->
    <!-- Install sample data                                           -->
    <!-- ============================================================= -->
    <target name="init_data" description="Install sample data">
      
      <mkdir dir="${dspace.dir}/data"/>
      
      <antcall target="copy_data"/>
      
      <echo>
====================================================================
Sample data has been installed in 

${dspace.dir}/data
====================================================================
      </echo>
      
    </target>
    
    <!-- ================================================================ -->
    <!-- Backup existing sample data; copy new sample data from build dir -->
    <!-- ================================================================ -->

    <target name="update_data" description="Update sample data. (Will not clobber existing sample data.)">
  
      <move todir="${dspace.dir}/data.bak-${build.date}" failonerror="no">
          <fileset dir="${dspace.dir}/data">
              <include name="**/*" />
          </fileset>
      </move>

        <echo>
====================================================================
 ${dspace.dir}/data was backed up to

 ${dspace.dir}/data.bak-${build.date}

 Please review this directory and delete it if it's no longer needed.
====================================================================
        </echo>
        
        <antcall target="copy_data"/>
        
        <echo>
====================================================================
 Updated sample data has been copied to 
  
 ${dspace.dir}/data
====================================================================
        </echo>
    </target> 
    
    <!-- ============================================================= -->
    <!-- Copy sample data to install dir                               -->
    <!-- ============================================================= -->
    <target name="copy_data" description="Copies sample data to install directory">
      
      <copy todir="${dspace.dir}/data" preservelastmodified="true" failonerror="no">
        <fileset dir="data"/>
      </copy>
      
    </target>
    
    
    <!-- =============================================================- -->
    <!-- Load structure: build community/collection structure from      -->
    <!-- sample data directories, load structure, map handles returned  -->
    <!-- by loader to sample data directories.                          -->
    <!-- ============================================================== -->
    <target name="load_structure" description="Load sample communities and collections">
      
      <antcall target="build_structure"/>
      
      <antcall target="import_structure"/>
      
      <antcall target="map_handles"/>
      
    </target>
    

    <!-- ==================================================================== -->
    <!--  Build community, collection import structure from sample data       -->
    <!-- ==================================================================== -->
    <target name="build_structure" description="Build community, collection import structure from sample data">
      
      <exec executable="define-structure" failonerror="yes">
        <arg line="--data '${dspace.dir}/data' --output '${dspace.dir}/data/import-structure.xml'"/>
      </exec>
      
      <echo>
        
====================================================================
Community/collection import structure created from sample data:

${dspace.dir}/data/import-structure.xml
====================================================================

      </echo>
      
    </target>


    <!-- ==================================================================== -->
    <!-- Import community, collection structure built from sample data        -->
    <!-- ==================================================================== -->
    <target name="import_structure" description="Import community, collection structure built from sample data">
      
      <condition property="eperson" value="${user}" else="${mail.admin}">
        <isset property="user"/>
      </condition>

      <java classname="org.dspace.administer.StructBuilder" classpathref="class.path" fork="yes" failonerror="yes">
        <sysproperty key="log4j.configuration" value="file:config/log4j-console.properties" />
        <sysproperty key="dspace.log.init.disable" value="true" />
        <sysproperty key="dspace.configuration" value="${config}" />
        <arg line="-f '${dspace.dir}/data/import-structure.xml' -o '${dspace.dir}/data/imported-structure.xml' -e ${eperson}" />
      </java>
      
      <echo>
        
====================================================================
Communties/collection defined in:

${dspace.dir}/data/import-structure.xml

have been imported to DSpace.  Community/collection handle IDs are
defined in:

${dspace.dir}/data/imported-structure.xml
====================================================================

      </echo>
      
    </target>
    
    <!-- ==================================================================== -->
    <!-- Write community/collection handles created during structure import   -->
    <!-- to corresponding sample data directories                             -->
    <!-- ==================================================================== -->
    <target name="map_handles">
      
      <exec executable="map-handles" failonerror="yes">
        <arg line="--data '${dspace.dir}/data' --file '${dspace.dir}/data/imported-structure.xml'"/>
      </exec>
      
      <echo>
        
====================================================================
Each community/collection handle ID defined in:

${dspace.dir}/data/imported-structure.xml

has been written to a 'handle.txt' file in sample data directory 
corresponding to the imported community/collection.
====================================================================      

      </echo>
      
    </target>

</project>

